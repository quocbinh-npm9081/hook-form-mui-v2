import { FC, useState, useEffect } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {useForm, SubmitHandler,FormProvider, useWatch} from 'react-hook-form'
import {yupResolver} from '@hookform/resolvers/yup';
import * as yup from 'yup';
import SubTextField from './components/SubTextField';
import MenuSelect from './components/MenuSelect';

interface IFormInputs{
  email?: string,
  password?:string,
  show?:string
}

const schema = yup.object().shape({
  email: yup.string().email().required('Name is required'),
  password: yup.string().min(4).max(20).required('Name is required'),
});

const initialValue : IFormInputs= {
  show: 'show-all'
}


export default function Home() {
  const [valueSelect , getValueSelected] = useState<string | undefined>('show-all');
  const [defaultValue, setDefaultValues] = useState<any>({email: '', password: '', ...initialValue});


  const methods = useForm<IFormInputs>({
    resolver: yupResolver(schema),
    defaultValues: defaultValue
  });




  const selected = methods.watch('show');
  useEffect(() => {
  if(valueSelect === 'show-email') {    
    setDefaultValues({email: '',...initialValue });
  }
  if(valueSelect === 'show-password') {
    setDefaultValues({password: '',...initialValue });
  }
  }, [valueSelect])
  
  useEffect(() => {
    getValueSelected(selected); 
  }, [selected])
  
  useEffect(() => {
    console.log(defaultValue)

  }, [defaultValue])
  

  const handleSubmitForm:SubmitHandler<IFormInputs> = (data:IFormInputs ) =>{  
    let dataTemp = data;
    delete dataTemp.show;
    console.log(dataTemp);    
    methods.reset(initialValue)
  };  

  return (
    <div className={styles.container}>
      <Head>
        <title>Create React App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      <FormProvider {...methods}>
          <form onSubmit={methods.handleSubmit(handleSubmitForm)}>
            {valueSelect === 'show-all' && <> 
              <SubTextField name='email' defaultValue=""/>           
              <SubTextField name='password' defaultValue=""/>
            </>}
            {valueSelect === 'show-email' && <SubTextField name='email' defaultValue=""/>}
            {valueSelect === 'show-password' && <SubTextField name='password' defaultValue=""/>}
            <MenuSelect name='show'/>         
            <input type="submit" value="submit"/>
          </form>
      </FormProvider>
      </main>
    </div>
  )
}
