import { FC } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import {useForm, SubmitHandler,Controller} from 'react-hook-form'
import { TextField } from '@mui/material'
import {yupResolver} from '@hookform/resolvers/yup';
import * as yup from 'yup';

interface IFormInputs{
  email: string,
  password:string
}

const schema = yup.object().shape({
  email: yup.string().email(),
  password: yup.string().min(4).max(20).required(),
});

export default function Home() {

  const {register, handleSubmit, watch,control, formState: {errors}} = useForm<IFormInputs>({
    resolver: yupResolver(schema)
  });

  const handleSubmitForm:SubmitHandler<IFormInputs> = (data:IFormInputs ) =>{
    console.log(data);    
  };

  // console.log("value Email change", watch('email'));
  
  console.log(errors);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          <form onSubmit={handleSubmit(handleSubmitForm)}>
            <Controller
            name='email'
            control={control}
            render={({field})=>{
              return <TextField {...field} label="email" error={!!errors.email} helperText={errors.email?.message}/>
            }}
            />
            <br />
            <Controller
            name='password'
            control={control}
            render={({field})=>{
              return <TextField {...field} label="password" error={!!errors.password} helperText={errors.password?.message}/>
            }}
            />
            <br />
            <input type="submit" value="submit"/>
          </form>
      </main>

      {
        errors && errors.email ? (
          <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          > 
           {errors.email && errors.email.message ? <span>{errors.email.message}</span> : null}           
          </a>
        </footer>
        ) : null
      }
      {
        errors && errors.password ? (
          <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          > 
            {errors.password && errors.password.message ? <span>{errors.password.message}</span>: null}           
          </a>
        </footer>
        ) : null
      }    
    </div>
  )
}
